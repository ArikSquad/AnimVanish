name: Build AnimVanish

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  build:
    name: Build the file
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup java 18
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '18'
        cache: 'maven'

    - name: Build the plugin
      uses: SpraxDev/Action-SpigotMC@v4.1.0
      with:
        versions: 1.18.2, 1.19, 1.19.1, 1.19.2
        generateSrc: false # Optional
        generateDoc: false # Optional
        disableJavaCheck: false # Optional
        remapped: false # Optional
        forceRun: true # Optional
        threads: 3 # Optional
        buildToolProvider: SpigotMC # Optional

  upload:
    if: "github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, '[release] ')"

      runs-on: ubuntu-latest

      needs: launcher

      steps:
        - name: Git Checkout
          uses: actions/checkout@v2

        - name: Download Artifacts
          uses: actions/download-artifact@v2

        - name: Extract Maven project version
            run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
            id: project

        - name: Create a Release
          uses: marvinpinto/action-automatic-releases@latest
          env:
            GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag: ${{ steps.project.outputs.version }}
            prerelease: false
            title: ${{ steps.project.outputs.version }}
            files: |
              target/*.jar

  preupload:
    if: "github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, '[prerelease] ')"

      runs-on: ubuntu-latest

      needs: launcher

      steps:
        - name: Git Checkout
          uses: actions/checkout@v2

        - name: Download Artifacts
          uses: actions/download-artifact@v2

        - name: Extract Maven project version
            run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
            id: project

        - name: Create a Release
          uses: marvinpinto/action-automatic-releases@latest
          env:
            GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            automatic_release_tag: ${{ steps.project.outputs.version }}
            prerelease: true
            title: ${{ steps.project.outputs.version }}
            files: |
              target/*.jar
    
